from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import TimeoutException, NoSuchElementException
import time
import random

# Initialize the Chrome WebDriver
driver = webdriver.Chrome()  # Ensure chromedriver is installed and in PATH

def login_instagram(username, password):
    driver.get("https://www.instagram.com/")
    time.sleep(random.uniform(2, 4))  # Random delay to mimic human behavior

    # Enter username
    username_field = WebDriverWait(driver, 10).until(
        EC.presence_of_element_located((By.NAME, "username"))
    )
    username_field.send_keys(username)

    # Enter password
    password_field = driver.find_element(By.NAME, "password")
    password_field.send_keys(password)

    # Click login button
    login_button = driver.find_element(By.XPATH, "//button[@type='submit']")
    login_button.click()

    # Wait for login to complete
    try:
        WebDriverWait(driver, 10).until(
            EC.presence_of_element_located((By.XPATH, "//a[@href='/#']"))  # Adjust based on post-login element
        )
        print("Login successful")
    except TimeoutException:
        print("Login failed or took too long")
        driver.quit()
        exit()

def remove_followers(batch_size=50, max_followers=1000):
    # Navigate to profile
    driver.get(f"https://www.instagram.com/{username}/")
    time.sleep(random.uniform(2, 4))

    # Click on followers list
    followers_link = WebDriverWait(driver, 10).until(
        EC.element_to_be_clickable((By.XPATH, "//a[contains(@href, '/followers')]"))
    )
    followers_link.click()
    time.sleep(random.uniform(2, 4))

    removed_count = 0
    while removed_count < max_followers:
        try:
            # Find all "Remove" buttons in the followers list
            remove_buttons = WebDriverWait(driver, 10).until(
                EC.presence_of_all_elements_located((By.XPATH, "//button[contains(text(), 'Remove')]"))
            )

            # Process followers in batches
            for i, button in enumerate(remove_buttons[:batch_size]):
                if removed_count >= max_followers:
                    break
                try:
                    button.click()
                    time.sleep(random.uniform(1, 3))  # Delay between clicks
                    # Confirm removal if prompted
                    confirm_button = WebDriverWait(driver, 5).until(
                        EC.element_to_be_clickable((By.XPATH, "//button[contains(text(), 'Remove')]"))
                    )
                    confirm_button.click()
                    removed_count += 1
                    print(f"Removed follower {removed_count}/{max_followers}")
                    time.sleep(random.uniform(2, 5))  # Delay to avoid detection
                except (TimeoutException, NoSuchElementException):
                    print("Error removing follower, skipping...")
                    continue

            # Scroll to load more followers
            driver.execute_script("document.querySelector('.x1dm5mii').scrollTop += 1000")  # Adjust selector if needed
            time.sleep(random.uniform(2, 4))

            # Break if no more followers to remove
            if not remove_buttons or len(remove_buttons) < batch_size:
                print("No more followers to remove or end of list reached")
                break

        except TimeoutException:
            print("Error loading followers, retrying...")
            time.sleep(5)

    print(f"Total followers removed: {removed_count}")

# Main execution
if __name__ == "__main__":
    username = "your_username"  # Replace with your Instagram username
    password = "your_password"  # Replace with your Instagram password
    login_instagram(username, password)
    remove_followers(batch_size=50, max_followers=1000)  # Adjust batch_size to stay within limits
    driver.quit()